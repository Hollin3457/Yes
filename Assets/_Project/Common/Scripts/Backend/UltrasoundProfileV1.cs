// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ultrasound_profile_v1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NUHS.Backend {

  /// <summary>Holder for reflection information generated from ultrasound_profile_v1.proto</summary>
  public static partial class UltrasoundProfileV1Reflection {

    #region Descriptor
    /// <summary>File descriptor for ultrasound_profile_v1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UltrasoundProfileV1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cht1bHRyYXNvdW5kX3Byb2ZpbGVfdjEucHJvdG8aDXZlY3RvcnMucHJvdG8i",
            "NAoeVWx0cmFzb3VuZFByb2ZpbGVMaXN0UmVxdWVzdFYxEhIKCnNob3dIaWRk",
            "ZW4YASABKAgiKwodVWx0cmFzb3VuZFByb2ZpbGVHZXRSZXF1ZXN0VjESCgoC",
            "aWQYASABKAkiSAoXVWx0cmFzb3VuZFByb2ZpbGVMaXN0VjESLQoIcHJvZmls",
            "ZXMYASADKAsyGy5VbHRyYXNvdW5kUHJvZmlsZVN1bW1hcnlWMSJqChpVbHRy",
            "YXNvdW5kUHJvZmlsZVN1bW1hcnlWMRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIg",
            "ASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEg0KBWltYWdlGAQgASgMEg4KBmhp",
            "ZGRlbhgFIAEoCCKoAQoTVWx0cmFzb3VuZFByb2ZpbGVWMRIKCgJpZBgBIAEo",
            "CRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEg0KBWltYWdl",
            "GAQgASgMEg4KBmhpZGRlbhgFIAEoCBIZCgpkZXZpY2VTaXplGAggASgLMgUu",
            "VmVjMxISCgpkZXZpY2VUeXBlGAogASgJEhQKDGRldmljZUNvbmZpZxgLIAEo",
            "CTKcAQoaVWx0cmFzb3VuZFByb2ZpbGVTZXJ2aWNlVjESQQoETGlzdBIfLlVs",
            "dHJhc291bmRQcm9maWxlTGlzdFJlcXVlc3RWMRoYLlVsdHJhc291bmRQcm9m",
            "aWxlTGlzdFYxEjsKA0dldBIeLlVsdHJhc291bmRQcm9maWxlR2V0UmVxdWVz",
            "dFYxGhQuVWx0cmFzb3VuZFByb2ZpbGVWMUIPqgIMTlVIUy5CYWNrZW5kYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NUHS.Backend.VectorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundProfileListRequestV1), global::NUHS.Backend.UltrasoundProfileListRequestV1.Parser, new[]{ "ShowHidden" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundProfileGetRequestV1), global::NUHS.Backend.UltrasoundProfileGetRequestV1.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundProfileListV1), global::NUHS.Backend.UltrasoundProfileListV1.Parser, new[]{ "Profiles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundProfileSummaryV1), global::NUHS.Backend.UltrasoundProfileSummaryV1.Parser, new[]{ "Id", "Name", "Description", "Image", "Hidden" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundProfileV1), global::NUHS.Backend.UltrasoundProfileV1.Parser, new[]{ "Id", "Name", "Description", "Image", "Hidden", "DeviceSize", "DeviceType", "DeviceConfig" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UltrasoundProfileListRequestV1 : pb::IMessage<UltrasoundProfileListRequestV1> {
    private static readonly pb::MessageParser<UltrasoundProfileListRequestV1> _parser = new pb::MessageParser<UltrasoundProfileListRequestV1>(() => new UltrasoundProfileListRequestV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundProfileListRequestV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundProfileV1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileListRequestV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileListRequestV1(UltrasoundProfileListRequestV1 other) : this() {
      showHidden_ = other.showHidden_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileListRequestV1 Clone() {
      return new UltrasoundProfileListRequestV1(this);
    }

    /// <summary>Field number for the "showHidden" field.</summary>
    public const int ShowHiddenFieldNumber = 1;
    private bool showHidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowHidden {
      get { return showHidden_; }
      set {
        showHidden_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundProfileListRequestV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundProfileListRequestV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShowHidden != other.ShowHidden) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShowHidden != false) hash ^= ShowHidden.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShowHidden != false) {
        output.WriteRawTag(8);
        output.WriteBool(ShowHidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShowHidden != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundProfileListRequestV1 other) {
      if (other == null) {
        return;
      }
      if (other.ShowHidden != false) {
        ShowHidden = other.ShowHidden;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShowHidden = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundProfileGetRequestV1 : pb::IMessage<UltrasoundProfileGetRequestV1> {
    private static readonly pb::MessageParser<UltrasoundProfileGetRequestV1> _parser = new pb::MessageParser<UltrasoundProfileGetRequestV1>(() => new UltrasoundProfileGetRequestV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundProfileGetRequestV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundProfileV1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileGetRequestV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileGetRequestV1(UltrasoundProfileGetRequestV1 other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileGetRequestV1 Clone() {
      return new UltrasoundProfileGetRequestV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundProfileGetRequestV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundProfileGetRequestV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundProfileGetRequestV1 other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundProfileListV1 : pb::IMessage<UltrasoundProfileListV1> {
    private static readonly pb::MessageParser<UltrasoundProfileListV1> _parser = new pb::MessageParser<UltrasoundProfileListV1>(() => new UltrasoundProfileListV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundProfileListV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundProfileV1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileListV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileListV1(UltrasoundProfileListV1 other) : this() {
      profiles_ = other.profiles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileListV1 Clone() {
      return new UltrasoundProfileListV1(this);
    }

    /// <summary>Field number for the "profiles" field.</summary>
    public const int ProfilesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::NUHS.Backend.UltrasoundProfileSummaryV1> _repeated_profiles_codec
        = pb::FieldCodec.ForMessage(10, global::NUHS.Backend.UltrasoundProfileSummaryV1.Parser);
    private readonly pbc::RepeatedField<global::NUHS.Backend.UltrasoundProfileSummaryV1> profiles_ = new pbc::RepeatedField<global::NUHS.Backend.UltrasoundProfileSummaryV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NUHS.Backend.UltrasoundProfileSummaryV1> Profiles {
      get { return profiles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundProfileListV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundProfileListV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profiles_.Equals(other.profiles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profiles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      profiles_.WriteTo(output, _repeated_profiles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += profiles_.CalculateSize(_repeated_profiles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundProfileListV1 other) {
      if (other == null) {
        return;
      }
      profiles_.Add(other.profiles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profiles_.AddEntriesFrom(input, _repeated_profiles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundProfileSummaryV1 : pb::IMessage<UltrasoundProfileSummaryV1> {
    private static readonly pb::MessageParser<UltrasoundProfileSummaryV1> _parser = new pb::MessageParser<UltrasoundProfileSummaryV1>(() => new UltrasoundProfileSummaryV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundProfileSummaryV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundProfileV1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileSummaryV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileSummaryV1(UltrasoundProfileSummaryV1 other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      image_ = other.image_;
      hidden_ = other.hidden_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileSummaryV1 Clone() {
      return new UltrasoundProfileSummaryV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Rich text HTML format allowed, e.g. &lt;b> for bold
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 4;
    private pb::ByteString image_ = pb::ByteString.Empty;
    /// <summary>
    /// JPEG image of the device? TBD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 5;
    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Hidden {
      get { return hidden_; }
      set {
        hidden_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundProfileSummaryV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundProfileSummaryV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Image != other.Image) return false;
      if (Hidden != other.Hidden) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (Hidden != false) hash ^= Hidden.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Image);
      }
      if (Hidden != false) {
        output.WriteRawTag(40);
        output.WriteBool(Hidden);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
      }
      if (Hidden != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundProfileSummaryV1 other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.Hidden != false) {
        Hidden = other.Hidden;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Image = input.ReadBytes();
            break;
          }
          case 40: {
            Hidden = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundProfileV1 : pb::IMessage<UltrasoundProfileV1> {
    private static readonly pb::MessageParser<UltrasoundProfileV1> _parser = new pb::MessageParser<UltrasoundProfileV1>(() => new UltrasoundProfileV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundProfileV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundProfileV1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileV1(UltrasoundProfileV1 other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      image_ = other.image_;
      hidden_ = other.hidden_;
      deviceSize_ = other.deviceSize_ != null ? other.deviceSize_.Clone() : null;
      deviceType_ = other.deviceType_;
      deviceConfig_ = other.deviceConfig_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundProfileV1 Clone() {
      return new UltrasoundProfileV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 4;
    private pb::ByteString image_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 5;
    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Hidden {
      get { return hidden_; }
      set {
        hidden_ = value;
      }
    }

    /// <summary>Field number for the "deviceSize" field.</summary>
    public const int DeviceSizeFieldNumber = 8;
    private global::NUHS.Backend.Vec3 deviceSize_;
    /// <summary>
    /// Size of the device, in mm (x = width of sensor/lens, z = depth of sensor/lens, y = length of device body)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NUHS.Backend.Vec3 DeviceSize {
      get { return deviceSize_; }
      set {
        deviceSize_ = value;
      }
    }

    /// <summary>Field number for the "deviceType" field.</summary>
    public const int DeviceTypeFieldNumber = 10;
    private string deviceType_ = "";
    /// <summary>
    /// This will affect the type of module/driver to use to connect to the device, right now we only have "sidecar-v1"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceType {
      get { return deviceType_; }
      set {
        deviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceConfig" field.</summary>
    public const int DeviceConfigFieldNumber = 11;
    private string deviceConfig_ = "";
    /// <summary>
    /// Dynamic configuration JSON data; depends on deviceType, the configuration data may be different
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceConfig {
      get { return deviceConfig_; }
      set {
        deviceConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundProfileV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundProfileV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Image != other.Image) return false;
      if (Hidden != other.Hidden) return false;
      if (!object.Equals(DeviceSize, other.DeviceSize)) return false;
      if (DeviceType != other.DeviceType) return false;
      if (DeviceConfig != other.DeviceConfig) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (Hidden != false) hash ^= Hidden.GetHashCode();
      if (deviceSize_ != null) hash ^= DeviceSize.GetHashCode();
      if (DeviceType.Length != 0) hash ^= DeviceType.GetHashCode();
      if (DeviceConfig.Length != 0) hash ^= DeviceConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Image);
      }
      if (Hidden != false) {
        output.WriteRawTag(40);
        output.WriteBool(Hidden);
      }
      if (deviceSize_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DeviceSize);
      }
      if (DeviceType.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(DeviceType);
      }
      if (DeviceConfig.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DeviceConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
      }
      if (Hidden != false) {
        size += 1 + 1;
      }
      if (deviceSize_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceSize);
      }
      if (DeviceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceType);
      }
      if (DeviceConfig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundProfileV1 other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.Hidden != false) {
        Hidden = other.Hidden;
      }
      if (other.deviceSize_ != null) {
        if (deviceSize_ == null) {
          DeviceSize = new global::NUHS.Backend.Vec3();
        }
        DeviceSize.MergeFrom(other.DeviceSize);
      }
      if (other.DeviceType.Length != 0) {
        DeviceType = other.DeviceType;
      }
      if (other.DeviceConfig.Length != 0) {
        DeviceConfig = other.DeviceConfig;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Image = input.ReadBytes();
            break;
          }
          case 40: {
            Hidden = input.ReadBool();
            break;
          }
          case 66: {
            if (deviceSize_ == null) {
              DeviceSize = new global::NUHS.Backend.Vec3();
            }
            input.ReadMessage(DeviceSize);
            break;
          }
          case 82: {
            DeviceType = input.ReadString();
            break;
          }
          case 90: {
            DeviceConfig = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
