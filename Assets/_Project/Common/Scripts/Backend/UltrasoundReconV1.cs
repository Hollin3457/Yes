// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ultrasound_recon_v1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NUHS.Backend {

  /// <summary>Holder for reflection information generated from ultrasound_recon_v1.proto</summary>
  public static partial class UltrasoundReconV1Reflection {

    #region Descriptor
    /// <summary>File descriptor for ultrasound_recon_v1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UltrasoundReconV1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chl1bHRyYXNvdW5kX3JlY29uX3YxLnByb3RvGg12ZWN0b3JzLnByb3RvIrEB",
            "CiFVbHRyYXNvdW5kUmVjb25zdHJ1Y3Rpb25SZXF1ZXN0VjESHAoUcmVjb25z",
            "dHJ1Y3Rpb25NZXRob2QYASABKAUSGQoKY3Vib2lkU2l6ZRgCIAEoCzIFLlZl",
            "YzMSGgoLcGl4ZWxzUGVyTU0YAyABKAsyBS5WZWMyEjcKBmltYWdlcxgFIAMo",
            "CzInLlVsdHJhc291bmRSZWNvbnN0cnVjdGlvbkNhcHR1cmVJbWFnZVYxImgK",
            "JlVsdHJhc291bmRSZWNvbnN0cnVjdGlvbkNhcHR1cmVJbWFnZVYxEgwKBGRh",
            "dGEYASABKAwSFwoIcG9zaXRpb24YAiABKAsyBS5WZWMzEhcKCHJvdGF0aW9u",
            "GAMgASgLMgUuVmVjMyIxCiNVbHRyYXNvdW5kUmVjb25zdHJ1Y3Rpb25Qcm9j",
            "ZXNzSWRWMRIKCgJpZBgBIAEoCSI1CiBVbHRyYXNvdW5kUmVjb25zdHJ1Y3Rp",
            "b25TdGF0dXNWMRIRCgljb21wbGV0ZWQYASABKAgiLgoeVWx0cmFzb3VuZFJl",
            "Y29uc3RydWN0aW9uTWVzaFYxEgwKBGRhdGEYASABKAkiKgooVWx0cmFzb3Vu",
            "ZFJlY29uc3RydWN0aW9uTWV0aG9kc1JlcXVlc3RWMSJbCiVVbHRyYXNvdW5k",
            "UmVjb25zdHJ1Y3Rpb25NZXRob2RzTGlzdFYxEjIKB21ldGhvZHMYASADKAsy",
            "IS5VbHRyYXNvdW5kUmVjb25zdHJ1Y3Rpb25NZXRob2RWMSJRCiBVbHRyYXNv",
            "dW5kUmVjb25zdHJ1Y3Rpb25NZXRob2RWMRIKCgJpZBgBIAEoBRIMCgRuYW1l",
            "GAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJMs8DCiFVbHRyYXNvdW5kUmVj",
            "b25zdHJ1Y3Rpb25TZXJ2aWNlVjESVwoLUmVjb25zdHJ1Y3QSIi5VbHRyYXNv",
            "dW5kUmVjb25zdHJ1Y3Rpb25SZXF1ZXN0VjEaJC5VbHRyYXNvdW5kUmVjb25z",
            "dHJ1Y3Rpb25Qcm9jZXNzSWRWMRJRCgZTdGF0dXMSJC5VbHRyYXNvdW5kUmVj",
            "b25zdHJ1Y3Rpb25Qcm9jZXNzSWRWMRohLlVsdHJhc291bmRSZWNvbnN0cnVj",
            "dGlvblN0YXR1c1YxEk0KBE1lc2gSJC5VbHRyYXNvdW5kUmVjb25zdHJ1Y3Rp",
            "b25Qcm9jZXNzSWRWMRofLlVsdHJhc291bmRSZWNvbnN0cnVjdGlvbk1lc2hW",
            "MRJRCgZEZWxldGUSJC5VbHRyYXNvdW5kUmVjb25zdHJ1Y3Rpb25Qcm9jZXNz",
            "SWRWMRohLlVsdHJhc291bmRSZWNvbnN0cnVjdGlvblN0YXR1c1YxElwKB01l",
            "dGhvZHMSKS5VbHRyYXNvdW5kUmVjb25zdHJ1Y3Rpb25NZXRob2RzUmVxdWVz",
            "dFYxGiYuVWx0cmFzb3VuZFJlY29uc3RydWN0aW9uTWV0aG9kc0xpc3RWMUIP",
            "qgIMTlVIUy5CYWNrZW5kYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NUHS.Backend.VectorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionRequestV1), global::NUHS.Backend.UltrasoundReconstructionRequestV1.Parser, new[]{ "ReconstructionMethod", "CuboidSize", "PixelsPerMM", "Images" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1), global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1.Parser, new[]{ "Data", "Position", "Rotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1), global::NUHS.Backend.UltrasoundReconstructionProcessIdV1.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionStatusV1), global::NUHS.Backend.UltrasoundReconstructionStatusV1.Parser, new[]{ "Completed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionMeshV1), global::NUHS.Backend.UltrasoundReconstructionMeshV1.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1), global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionMethodsListV1), global::NUHS.Backend.UltrasoundReconstructionMethodsListV1.Parser, new[]{ "Methods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NUHS.Backend.UltrasoundReconstructionMethodV1), global::NUHS.Backend.UltrasoundReconstructionMethodV1.Parser, new[]{ "Id", "Name", "Description" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UltrasoundReconstructionRequestV1 : pb::IMessage<UltrasoundReconstructionRequestV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionRequestV1> _parser = new pb::MessageParser<UltrasoundReconstructionRequestV1>(() => new UltrasoundReconstructionRequestV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionRequestV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionRequestV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionRequestV1(UltrasoundReconstructionRequestV1 other) : this() {
      reconstructionMethod_ = other.reconstructionMethod_;
      cuboidSize_ = other.cuboidSize_ != null ? other.cuboidSize_.Clone() : null;
      pixelsPerMM_ = other.pixelsPerMM_ != null ? other.pixelsPerMM_.Clone() : null;
      images_ = other.images_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionRequestV1 Clone() {
      return new UltrasoundReconstructionRequestV1(this);
    }

    /// <summary>Field number for the "reconstructionMethod" field.</summary>
    public const int ReconstructionMethodFieldNumber = 1;
    private int reconstructionMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReconstructionMethod {
      get { return reconstructionMethod_; }
      set {
        reconstructionMethod_ = value;
      }
    }

    /// <summary>Field number for the "cuboidSize" field.</summary>
    public const int CuboidSizeFieldNumber = 2;
    private global::NUHS.Backend.Vec3 cuboidSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NUHS.Backend.Vec3 CuboidSize {
      get { return cuboidSize_; }
      set {
        cuboidSize_ = value;
      }
    }

    /// <summary>Field number for the "pixelsPerMM" field.</summary>
    public const int PixelsPerMMFieldNumber = 3;
    private global::NUHS.Backend.Vec2 pixelsPerMM_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NUHS.Backend.Vec2 PixelsPerMM {
      get { return pixelsPerMM_; }
      set {
        pixelsPerMM_ = value;
      }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1> _repeated_images_codec
        = pb::FieldCodec.ForMessage(42, global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1.Parser);
    private readonly pbc::RepeatedField<global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1> images_ = new pbc::RepeatedField<global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NUHS.Backend.UltrasoundReconstructionCaptureImageV1> Images {
      get { return images_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionRequestV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionRequestV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReconstructionMethod != other.ReconstructionMethod) return false;
      if (!object.Equals(CuboidSize, other.CuboidSize)) return false;
      if (!object.Equals(PixelsPerMM, other.PixelsPerMM)) return false;
      if(!images_.Equals(other.images_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReconstructionMethod != 0) hash ^= ReconstructionMethod.GetHashCode();
      if (cuboidSize_ != null) hash ^= CuboidSize.GetHashCode();
      if (pixelsPerMM_ != null) hash ^= PixelsPerMM.GetHashCode();
      hash ^= images_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReconstructionMethod != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReconstructionMethod);
      }
      if (cuboidSize_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CuboidSize);
      }
      if (pixelsPerMM_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PixelsPerMM);
      }
      images_.WriteTo(output, _repeated_images_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReconstructionMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReconstructionMethod);
      }
      if (cuboidSize_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CuboidSize);
      }
      if (pixelsPerMM_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PixelsPerMM);
      }
      size += images_.CalculateSize(_repeated_images_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionRequestV1 other) {
      if (other == null) {
        return;
      }
      if (other.ReconstructionMethod != 0) {
        ReconstructionMethod = other.ReconstructionMethod;
      }
      if (other.cuboidSize_ != null) {
        if (cuboidSize_ == null) {
          CuboidSize = new global::NUHS.Backend.Vec3();
        }
        CuboidSize.MergeFrom(other.CuboidSize);
      }
      if (other.pixelsPerMM_ != null) {
        if (pixelsPerMM_ == null) {
          PixelsPerMM = new global::NUHS.Backend.Vec2();
        }
        PixelsPerMM.MergeFrom(other.PixelsPerMM);
      }
      images_.Add(other.images_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReconstructionMethod = input.ReadInt32();
            break;
          }
          case 18: {
            if (cuboidSize_ == null) {
              CuboidSize = new global::NUHS.Backend.Vec3();
            }
            input.ReadMessage(CuboidSize);
            break;
          }
          case 26: {
            if (pixelsPerMM_ == null) {
              PixelsPerMM = new global::NUHS.Backend.Vec2();
            }
            input.ReadMessage(PixelsPerMM);
            break;
          }
          case 42: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionCaptureImageV1 : pb::IMessage<UltrasoundReconstructionCaptureImageV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionCaptureImageV1> _parser = new pb::MessageParser<UltrasoundReconstructionCaptureImageV1>(() => new UltrasoundReconstructionCaptureImageV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionCaptureImageV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionCaptureImageV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionCaptureImageV1(UltrasoundReconstructionCaptureImageV1 other) : this() {
      data_ = other.data_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionCaptureImageV1 Clone() {
      return new UltrasoundReconstructionCaptureImageV1(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::NUHS.Backend.Vec3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NUHS.Backend.Vec3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private global::NUHS.Backend.Vec3 rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NUHS.Backend.Vec3 Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionCaptureImageV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionCaptureImageV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionCaptureImageV1 other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::NUHS.Backend.Vec3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::NUHS.Backend.Vec3();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::NUHS.Backend.Vec3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              Rotation = new global::NUHS.Backend.Vec3();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionProcessIdV1 : pb::IMessage<UltrasoundReconstructionProcessIdV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionProcessIdV1> _parser = new pb::MessageParser<UltrasoundReconstructionProcessIdV1>(() => new UltrasoundReconstructionProcessIdV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionProcessIdV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionProcessIdV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionProcessIdV1(UltrasoundReconstructionProcessIdV1 other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionProcessIdV1 Clone() {
      return new UltrasoundReconstructionProcessIdV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionProcessIdV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionProcessIdV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionProcessIdV1 other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionStatusV1 : pb::IMessage<UltrasoundReconstructionStatusV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionStatusV1> _parser = new pb::MessageParser<UltrasoundReconstructionStatusV1>(() => new UltrasoundReconstructionStatusV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionStatusV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionStatusV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionStatusV1(UltrasoundReconstructionStatusV1 other) : this() {
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionStatusV1 Clone() {
      return new UltrasoundReconstructionStatusV1(this);
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 1;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionStatusV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionStatusV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Completed != false) {
        output.WriteRawTag(8);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionStatusV1 other) {
      if (other == null) {
        return;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionMeshV1 : pb::IMessage<UltrasoundReconstructionMeshV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionMeshV1> _parser = new pb::MessageParser<UltrasoundReconstructionMeshV1>(() => new UltrasoundReconstructionMeshV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionMeshV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMeshV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMeshV1(UltrasoundReconstructionMeshV1 other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMeshV1 Clone() {
      return new UltrasoundReconstructionMeshV1(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionMeshV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionMeshV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionMeshV1 other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionMethodsRequestV1 : pb::IMessage<UltrasoundReconstructionMethodsRequestV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionMethodsRequestV1> _parser = new pb::MessageParser<UltrasoundReconstructionMethodsRequestV1>(() => new UltrasoundReconstructionMethodsRequestV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionMethodsRequestV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodsRequestV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodsRequestV1(UltrasoundReconstructionMethodsRequestV1 other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodsRequestV1 Clone() {
      return new UltrasoundReconstructionMethodsRequestV1(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionMethodsRequestV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionMethodsRequestV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionMethodsRequestV1 other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionMethodsListV1 : pb::IMessage<UltrasoundReconstructionMethodsListV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionMethodsListV1> _parser = new pb::MessageParser<UltrasoundReconstructionMethodsListV1>(() => new UltrasoundReconstructionMethodsListV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionMethodsListV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodsListV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodsListV1(UltrasoundReconstructionMethodsListV1 other) : this() {
      methods_ = other.methods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodsListV1 Clone() {
      return new UltrasoundReconstructionMethodsListV1(this);
    }

    /// <summary>Field number for the "methods" field.</summary>
    public const int MethodsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::NUHS.Backend.UltrasoundReconstructionMethodV1> _repeated_methods_codec
        = pb::FieldCodec.ForMessage(10, global::NUHS.Backend.UltrasoundReconstructionMethodV1.Parser);
    private readonly pbc::RepeatedField<global::NUHS.Backend.UltrasoundReconstructionMethodV1> methods_ = new pbc::RepeatedField<global::NUHS.Backend.UltrasoundReconstructionMethodV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NUHS.Backend.UltrasoundReconstructionMethodV1> Methods {
      get { return methods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionMethodsListV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionMethodsListV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!methods_.Equals(other.methods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= methods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      methods_.WriteTo(output, _repeated_methods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += methods_.CalculateSize(_repeated_methods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionMethodsListV1 other) {
      if (other == null) {
        return;
      }
      methods_.Add(other.methods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            methods_.AddEntriesFrom(input, _repeated_methods_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UltrasoundReconstructionMethodV1 : pb::IMessage<UltrasoundReconstructionMethodV1> {
    private static readonly pb::MessageParser<UltrasoundReconstructionMethodV1> _parser = new pb::MessageParser<UltrasoundReconstructionMethodV1>(() => new UltrasoundReconstructionMethodV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UltrasoundReconstructionMethodV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodV1(UltrasoundReconstructionMethodV1 other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UltrasoundReconstructionMethodV1 Clone() {
      return new UltrasoundReconstructionMethodV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UltrasoundReconstructionMethodV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UltrasoundReconstructionMethodV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UltrasoundReconstructionMethodV1 other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
