// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: debug_v1.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NUHS.Backend {
  public static partial class DebugServiceV1
  {
    static readonly string __ServiceName = "DebugServiceV1";

    static readonly grpc::Marshaller<global::NUHS.Backend.DebugUploadRequestV1> __Marshaller_DebugUploadRequestV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.DebugUploadRequestV1.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Backend.DebugUploadResponseV1> __Marshaller_DebugUploadResponseV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.DebugUploadResponseV1.Parser.ParseFrom);

    static readonly grpc::Method<global::NUHS.Backend.DebugUploadRequestV1, global::NUHS.Backend.DebugUploadResponseV1> __Method_Upload = new grpc::Method<global::NUHS.Backend.DebugUploadRequestV1, global::NUHS.Backend.DebugUploadResponseV1>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Upload",
        __Marshaller_DebugUploadRequestV1,
        __Marshaller_DebugUploadResponseV1);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NUHS.Backend.DebugV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for DebugServiceV1</summary>
    public partial class DebugServiceV1Client : grpc::ClientBase<DebugServiceV1Client>
    {
      /// <summary>Creates a new client for DebugServiceV1</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DebugServiceV1Client(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DebugServiceV1 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DebugServiceV1Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DebugServiceV1Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DebugServiceV1Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::NUHS.Backend.DebugUploadResponseV1 Upload(global::NUHS.Backend.DebugUploadRequestV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Upload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NUHS.Backend.DebugUploadResponseV1 Upload(global::NUHS.Backend.DebugUploadRequestV1 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Upload, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.DebugUploadResponseV1> UploadAsync(global::NUHS.Backend.DebugUploadRequestV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.DebugUploadResponseV1> UploadAsync(global::NUHS.Backend.DebugUploadRequestV1 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Upload, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DebugServiceV1Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new DebugServiceV1Client(configuration);
      }
    }

  }
}
#endregion
