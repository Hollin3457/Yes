// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ultrasound_recon_v1.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NUHS.Backend {
  public static partial class UltrasoundReconstructionServiceV1
  {
    static readonly string __ServiceName = "UltrasoundReconstructionServiceV1";

    static readonly grpc::Marshaller<global::NUHS.Backend.UltrasoundReconstructionRequestV1> __Marshaller_UltrasoundReconstructionRequestV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.UltrasoundReconstructionRequestV1.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1> __Marshaller_UltrasoundReconstructionProcessIdV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.UltrasoundReconstructionProcessIdV1.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Backend.UltrasoundReconstructionStatusV1> __Marshaller_UltrasoundReconstructionStatusV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.UltrasoundReconstructionStatusV1.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Backend.UltrasoundReconstructionMeshV1> __Marshaller_UltrasoundReconstructionMeshV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.UltrasoundReconstructionMeshV1.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1> __Marshaller_UltrasoundReconstructionMethodsRequestV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Backend.UltrasoundReconstructionMethodsListV1> __Marshaller_UltrasoundReconstructionMethodsListV1 = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Backend.UltrasoundReconstructionMethodsListV1.Parser.ParseFrom);

    static readonly grpc::Method<global::NUHS.Backend.UltrasoundReconstructionRequestV1, global::NUHS.Backend.UltrasoundReconstructionProcessIdV1> __Method_Reconstruct = new grpc::Method<global::NUHS.Backend.UltrasoundReconstructionRequestV1, global::NUHS.Backend.UltrasoundReconstructionProcessIdV1>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Reconstruct",
        __Marshaller_UltrasoundReconstructionRequestV1,
        __Marshaller_UltrasoundReconstructionProcessIdV1);

    static readonly grpc::Method<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1, global::NUHS.Backend.UltrasoundReconstructionStatusV1> __Method_Status = new grpc::Method<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1, global::NUHS.Backend.UltrasoundReconstructionStatusV1>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Status",
        __Marshaller_UltrasoundReconstructionProcessIdV1,
        __Marshaller_UltrasoundReconstructionStatusV1);

    static readonly grpc::Method<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1, global::NUHS.Backend.UltrasoundReconstructionMeshV1> __Method_Mesh = new grpc::Method<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1, global::NUHS.Backend.UltrasoundReconstructionMeshV1>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Mesh",
        __Marshaller_UltrasoundReconstructionProcessIdV1,
        __Marshaller_UltrasoundReconstructionMeshV1);

    static readonly grpc::Method<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1, global::NUHS.Backend.UltrasoundReconstructionStatusV1> __Method_Delete = new grpc::Method<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1, global::NUHS.Backend.UltrasoundReconstructionStatusV1>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_UltrasoundReconstructionProcessIdV1,
        __Marshaller_UltrasoundReconstructionStatusV1);

    static readonly grpc::Method<global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1, global::NUHS.Backend.UltrasoundReconstructionMethodsListV1> __Method_Methods = new grpc::Method<global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1, global::NUHS.Backend.UltrasoundReconstructionMethodsListV1>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Methods",
        __Marshaller_UltrasoundReconstructionMethodsRequestV1,
        __Marshaller_UltrasoundReconstructionMethodsListV1);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NUHS.Backend.UltrasoundReconV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for UltrasoundReconstructionServiceV1</summary>
    public partial class UltrasoundReconstructionServiceV1Client : grpc::ClientBase<UltrasoundReconstructionServiceV1Client>
    {
      /// <summary>Creates a new client for UltrasoundReconstructionServiceV1</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UltrasoundReconstructionServiceV1Client(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UltrasoundReconstructionServiceV1 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UltrasoundReconstructionServiceV1Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UltrasoundReconstructionServiceV1Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UltrasoundReconstructionServiceV1Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Initiate a reconstruction request and returns an ID which can be used later to query status or retrieve mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 Reconstruct(global::NUHS.Backend.UltrasoundReconstructionRequestV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Reconstruct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiate a reconstruction request and returns an ID which can be used later to query status or retrieve mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 Reconstruct(global::NUHS.Backend.UltrasoundReconstructionRequestV1 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Reconstruct, null, options, request);
      }
      /// <summary>
      /// Initiate a reconstruction request and returns an ID which can be used later to query status or retrieve mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1> ReconstructAsync(global::NUHS.Backend.UltrasoundReconstructionRequestV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReconstructAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiate a reconstruction request and returns an ID which can be used later to query status or retrieve mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionProcessIdV1> ReconstructAsync(global::NUHS.Backend.UltrasoundReconstructionRequestV1 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Reconstruct, null, options, request);
      }
      /// <summary>
      /// Query the status of a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionStatusV1 Status(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Status(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Query the status of a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionStatusV1 Status(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Status, null, options, request);
      }
      /// <summary>
      /// Query the status of a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionStatusV1> StatusAsync(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Query the status of a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionStatusV1> StatusAsync(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Status, null, options, request);
      }
      /// <summary>
      /// Download the constructed mesh from a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionMeshV1 Mesh(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Mesh(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Download the constructed mesh from a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionMeshV1 Mesh(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Mesh, null, options, request);
      }
      /// <summary>
      /// Download the constructed mesh from a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionMeshV1> MeshAsync(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MeshAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Download the constructed mesh from a recostruction process
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionMeshV1> MeshAsync(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Mesh, null, options, request);
      }
      /// <summary>
      /// Delete the data of a reconstruction process, including all stored images and mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionStatusV1 Delete(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete the data of a reconstruction process, including all stored images and mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionStatusV1 Delete(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Delete the data of a reconstruction process, including all stored images and mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionStatusV1> DeleteAsync(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete the data of a reconstruction process, including all stored images and mesh
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionStatusV1> DeleteAsync(global::NUHS.Backend.UltrasoundReconstructionProcessIdV1 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Query the list of available reconstruction methods/algorithms
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionMethodsListV1 Methods(global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Methods(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Query the list of available reconstruction methods/algorithms
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::NUHS.Backend.UltrasoundReconstructionMethodsListV1 Methods(global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1 request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Methods, null, options, request);
      }
      /// <summary>
      /// Query the list of available reconstruction methods/algorithms
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionMethodsListV1> MethodsAsync(global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1 request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MethodsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Query the list of available reconstruction methods/algorithms
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::NUHS.Backend.UltrasoundReconstructionMethodsListV1> MethodsAsync(global::NUHS.Backend.UltrasoundReconstructionMethodsRequestV1 request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Methods, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UltrasoundReconstructionServiceV1Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new UltrasoundReconstructionServiceV1Client(configuration);
      }
    }

  }
}
#endregion
