// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: marker_tracker_v1.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NUHS.Sidecar {
  public static partial class MarkerTrackerServiceV1
  {
    static readonly string __ServiceName = "MarkerTrackerServiceV1";

    static readonly grpc::Marshaller<global::NUHS.Sidecar.MarkerTrackerSingleRequest> __Marshaller_MarkerTrackerSingleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Sidecar.MarkerTrackerSingleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Sidecar.MarkerPositions> __Marshaller_MarkerPositions = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Sidecar.MarkerPositions.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::NUHS.Sidecar.MarkerTrackerStereoRequest> __Marshaller_MarkerTrackerStereoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::NUHS.Sidecar.MarkerTrackerStereoRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::NUHS.Sidecar.MarkerTrackerSingleRequest, global::NUHS.Sidecar.MarkerPositions> __Method_TrackSingleUnary = new grpc::Method<global::NUHS.Sidecar.MarkerTrackerSingleRequest, global::NUHS.Sidecar.MarkerPositions>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TrackSingleUnary",
        __Marshaller_MarkerTrackerSingleRequest,
        __Marshaller_MarkerPositions);

    static readonly grpc::Method<global::NUHS.Sidecar.MarkerTrackerSingleRequest, global::NUHS.Sidecar.MarkerPositions> __Method_TrackSingleStreaming = new grpc::Method<global::NUHS.Sidecar.MarkerTrackerSingleRequest, global::NUHS.Sidecar.MarkerPositions>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "TrackSingleStreaming",
        __Marshaller_MarkerTrackerSingleRequest,
        __Marshaller_MarkerPositions);

    static readonly grpc::Method<global::NUHS.Sidecar.MarkerTrackerStereoRequest, global::NUHS.Sidecar.MarkerPositions> __Method_TrackStereoUnary = new grpc::Method<global::NUHS.Sidecar.MarkerTrackerStereoRequest, global::NUHS.Sidecar.MarkerPositions>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TrackStereoUnary",
        __Marshaller_MarkerTrackerStereoRequest,
        __Marshaller_MarkerPositions);

    static readonly grpc::Method<global::NUHS.Sidecar.MarkerTrackerStereoRequest, global::NUHS.Sidecar.MarkerPositions> __Method_TrackStereoStreaming = new grpc::Method<global::NUHS.Sidecar.MarkerTrackerStereoRequest, global::NUHS.Sidecar.MarkerPositions>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "TrackStereoStreaming",
        __Marshaller_MarkerTrackerStereoRequest,
        __Marshaller_MarkerPositions);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NUHS.Sidecar.MarkerTrackerV1Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for MarkerTrackerServiceV1</summary>
    public partial class MarkerTrackerServiceV1Client : grpc::ClientBase<MarkerTrackerServiceV1Client>
    {
      /// <summary>Creates a new client for MarkerTrackerServiceV1</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MarkerTrackerServiceV1Client(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MarkerTrackerServiceV1 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MarkerTrackerServiceV1Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MarkerTrackerServiceV1Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MarkerTrackerServiceV1Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::NUHS.Sidecar.MarkerPositions TrackSingleUnary(global::NUHS.Sidecar.MarkerTrackerSingleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackSingleUnary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NUHS.Sidecar.MarkerPositions TrackSingleUnary(global::NUHS.Sidecar.MarkerTrackerSingleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrackSingleUnary, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NUHS.Sidecar.MarkerPositions> TrackSingleUnaryAsync(global::NUHS.Sidecar.MarkerTrackerSingleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackSingleUnaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NUHS.Sidecar.MarkerPositions> TrackSingleUnaryAsync(global::NUHS.Sidecar.MarkerTrackerSingleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrackSingleUnary, null, options, request);
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::NUHS.Sidecar.MarkerTrackerSingleRequest, global::NUHS.Sidecar.MarkerPositions> TrackSingleStreaming(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackSingleStreaming(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::NUHS.Sidecar.MarkerTrackerSingleRequest, global::NUHS.Sidecar.MarkerPositions> TrackSingleStreaming(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_TrackSingleStreaming, null, options);
      }
      public virtual global::NUHS.Sidecar.MarkerPositions TrackStereoUnary(global::NUHS.Sidecar.MarkerTrackerStereoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackStereoUnary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::NUHS.Sidecar.MarkerPositions TrackStereoUnary(global::NUHS.Sidecar.MarkerTrackerStereoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrackStereoUnary, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::NUHS.Sidecar.MarkerPositions> TrackStereoUnaryAsync(global::NUHS.Sidecar.MarkerTrackerStereoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackStereoUnaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::NUHS.Sidecar.MarkerPositions> TrackStereoUnaryAsync(global::NUHS.Sidecar.MarkerTrackerStereoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrackStereoUnary, null, options, request);
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::NUHS.Sidecar.MarkerTrackerStereoRequest, global::NUHS.Sidecar.MarkerPositions> TrackStereoStreaming(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrackStereoStreaming(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::NUHS.Sidecar.MarkerTrackerStereoRequest, global::NUHS.Sidecar.MarkerPositions> TrackStereoStreaming(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_TrackStereoStreaming, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MarkerTrackerServiceV1Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new MarkerTrackerServiceV1Client(configuration);
      }
    }

  }
}
#endregion
